# Default values for variant-formatter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

uta:
  version: "uta_20190927"

postgresql:
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: "11.9.0-debian-10-r16"
  initdbScriptsConfigMap: "{{ .Release.Name }}-uta-config"
  postgresqlUsername: uta_admin
  postgresqlPassword: uta_admin
  postgresqlDatabase: uta

seqrepo:
  dataRelease: "2019-06-20"
  image:
    # TODO: they have a rest interface too now, consider upgrading
    repository: biocommons/seqrepo
    tag: "2018-08-21"
    pullPolicy: IfNotPresent
  persistence:
    enabled: true
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 15Gi
    # existingClaim: ""

# horizontal scaling: number of pods
# When in doubt, increase replicaCount, see https://stackoverflow.com/questions/51610189/docker-kubernetes-gunicorn-celery-multiple-workers-vs-replicas
replicaCount: 1
# vertical scaling: number of worker processes inside the pod
maxWorkers: 1

image:
  repository: molgenis/variant-formatter
  tag: 1.0.0
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 1234

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
  path: "/"

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
