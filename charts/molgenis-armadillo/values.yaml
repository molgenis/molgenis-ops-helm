replicaCount: 1

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

shared:
  issuerUri: 'https://auth.molgenis.org'
  client_secret: xxxxxx-xxxxxx-xxxxxx

server:
  image:
    repository: molgenis/armadillo
    tag: latest
    pullPolicy: Always
  debug: false
  session:
    timeout: 60
  admin:
    username: admin
    password: admin
  audit:
    accessMode: ReadWriteOnce
    size: 100M
  filebeat:
    enabled: false
    image:
      repository: docker.elastic.co/beats/filebeat-oss
      tag: 7.9.3
      pullPolicy: IfNotPresent
    elasticsearch: 'http://elasticsearch:9200'
    persistence:
      accessMode: ReadWriteOnce
      size: 100M
  resources:
    limits:
      cpu: 1
      memory: 1500Mi
    requests:
      cpu: 1
      memory: 1500Mi
  config:
    # You can provide any config you like here

molgenis-rserve:
  image:
    repository: datashield/armadillo-rserver
    tag: latest
    pullPolicy: IfNotPresent
  enabled: true
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  nodeSelector:
    deployPod: "true"

minio:
  image:
    tag: RELEASE.2020-10-09T22-55-05Z
  enabled: true
  accessKey: datashield
  secretKey: datashield
  persistence:
    enabled: true
    retain: false
    size: 5Gi
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi
  minioConfig:
    region: ""
  service:
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/minio/prometheus/metrics'
      prometheus.io/port: '9000'
  trustedCertsSecret: kes-cert
  kesCert: |
    -----BEGIN CERTIFICATE-----
    MIIDCjCCAfKgAwIBAgIRAJcLTE6LhgdWW5lqfrh5q4wwDQYJKoZIhvcNAQELBQAw
    ETEPMA0GA1UEAxMGa2VzLWNhMB4XDTIxMDIxNzExMjgwOVoXDTIyMDIxNzExMjgw
    OVowDjEMMAoGA1UEAxMDa2VzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
    AQEAzToEDpV9AVHpHvPjG0sBHG7vAk4tUq0QFcVQceyS5njYgPC0zxBRvPg0yQct
    aRTOu6tGfw0y7ZbQzEuViQF75O/tTOJeoNlsm7dhoKvAVz/396LTQpbuZ4HZWF6P
    HKyCvK2lgmqcnkOEpJoE+86kV1HfaTASf3Q2pHImCp3YWJXbayt/2UzoRZ5fS5t6
    UZKAJqn8MgOuF3/iSXp7HjpacvbsQlD3DK+r1dGUziBK8K92Xxqe/SnzYE6ZwdKQ
    Xw26vJ0h3OqTEs+HvVTENMMvu7+ZvD5OE/FCT9nkn1pOD1FMxyMOcdITEXkruo5P
    fbr6utaJ40krL+QKWzSs6NfSmwIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAwHQYD
    VR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0R
    BBgwFoIHa2VzLmtlc4ILa2VzLmtlcy5zdmMwDQYJKoZIhvcNAQELBQADggEBAJ1i
    RBQsiTusb7g1lUgmhwCE5VWYo/CyAV4UMvtpE/XQj9I5kUay7a42rnet/5QacQKs
    YIbGbohYUAzohujhUKQyWcOKX8eDz62jznyghz89fG6FU5AmS3MYQBg0U647cO0r
    2tv5JjBN1ljHSJ0jiC2c0ntcVE5uxM4azlIvXISYj/4hIYEctpaxz9vJ1GkxgGiW
    kRipNSs1UfDWO3HhC1SqsSID+uGOGpf8WSyOoqTS892GeyHzbxWcJfZv3dZrHuRH
    EsAjwNbsJ7HgLym0oUnyBEOQe+QLY3STIQ8y+rj7CuwoFHowPUkjYUkJNvw6na7D
    ngklbsxz9iajCsfQ2Xg=
    -----END CERTIFICATE-----
  environment:
    MINIO_IDENTITY_OPENID_CLIENT_ID: "xxx-xxxx-xxx-xxx"
    MINIO_IDENTITY_OPENID_CONFIG_URL: "https://auth.molgenis.org/.well-known/openid-configuration"
    MINIO_KMS_KES_ENDPOINT: https://kes.kes.svc:7373
    MINIO_KMS_KES_KEY_NAME: armadillo
    MINIO_KMS_KES_CERT_FILE: /etc/minio/certs/CAs/client.cert
    MINIO_KMS_KES_KEY_FILE: /etc/minio/certs/CAs/client.key
    MINIO_KMS_AUTO_ENCRYPTION: 'on'
  nodeSelector:
    deployPod: "true"

kes:
  image:
    repository: minio/kes
    tag: latest
    pullPolicy: IfNotPresent

molgenis-auth:
  enabled: true
  image:
    repository: molgenis/molgenis-auth
    tag: latest
  ingress:
    enabled: false
  service:
    port: 4000
  config:
    nameOverride: auth-config
  secret:
    nameOverride: auth-secret
    api_token: xxxxxxxxxx

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 0

nodeSelector:
  deployPod: "true"

tolerations: []

affinity: {}
