prometheus:
  alertmanager:
    nodeSelector:
      deployPod: "true"
    resources:
      limits:
        cpu: 10m
        memory: 32Mi
      requests:
        cpu: 10m
        memory: 32Mi
    global:
      slack_api_url: ''
    receivers:
      - name: default-receiver
        slack_configs:
          - channel: '#alerts'
            send_resolved: true
            text: "{{ range .Alerts }}{{ .Annotations.summary }}\n{{ .Annotations.description }}\n{{ end }}"
    route:
      group_wait: 10s
      group_interval: 5m
      receiver: default-receiver
      repeat_interval: 3h
      routes:
        - receiver: default-receiver
          match:
            frequency: daily
          continue: false
          repeat_interval: 24h
        - receiver: default-receiver
          match:
            frequency: 15m
          continue: false
          repeat_interval: 15m

  kube-state-metrics:
    enabled: true
    nodeSelector:
      deployPod: "true"
    resources:
      limits:
        cpu: 20m
        memory: 128Mi
      requests:
        cpu: 20m
        memory: 128Mi

  prometheus-node-exporter:
    enabled: false

  pushgateway:
    nodeSelector:
      deployPod: "true"
    resources:
      limits:
        cpu: 10m
        memory: 32Mi
      requests:
        cpu: 10m
        memory: 32Mi

  server:
    nodeSelector:
      deployPod: "true"
    resources:
      limits:
        cpu: 1
        memory: 6Gi
      requests:
        cpu: 1
        memory: 6Gi
    configMapOverrideName: "serverFiles-configmap"
    extraConfigmapMounts:
      - name: targets-configmap
        mountPath: /etc/targets
        subPath: ""
        configMap: targets-configmap
        readOnly: true

  configmapReload:
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 100m
        memory: 64Mi
    extraConfigmapMounts:
      - name: targets-configmap
        mountPath: /etc/targets
        subPath: ""
        configMap: targets-configmap
        readOnly: true

prometheus-blackbox-exporter:
  config:
    modules:
      http_2xx:
        prober: http
        timeout: 30s
        http:
          valid_status_codes: []
          method: GET
          no_follow_redirects: false
          preferred_ip_protocol: "ip4"
          ip_protocol_fallback: false
      http_api_2xx:
        prober: http
        timeout: 30s
        http:
          valid_status_codes: []
          method: GET
          fail_if_body_not_matches_regexp:
            - "^.*buildDate.*molgenisVersion.*$"
          preferred_ip_protocol: "ip4"
          ip_protocol_fallback: false

secret:
  githubtoken: "xxxx"
  serverlistuser: "xxxx"
  serverlistpassword: "xxxx"
