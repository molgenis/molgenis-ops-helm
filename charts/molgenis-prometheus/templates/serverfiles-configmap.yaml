apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-serverFiles-configmap
data:
  alerting_rules.yml: |
    groups:
      - name: SiteMonitoring
        rules:
          - alert: UnreachableURL
            expr: probe_success{job="blackbox-targets", type="production"} == 0
            for: 6m
            labels:
              severity: CRITICAL
              frequency: 15m
            annotations:
              summary: {{ printf "\"Site unreachable\"" }}
              description: {{ printf "\"  Website: {{$labels.instance}} \\n  ID: {{ $labels.id }} \\n  project: {{$labels.project}} \\n  Type: {{$labels.type}} \\n \"" }}
      - name: virtualmachines
        rules:
          - alert: InstanceProdDownNewInfra
            expr: up{job="merlin"} == 0
            for: 5m
            labels:
              severity: CRITICAL
              frequency: 15m
            annotations:
              summary: {{ printf "\"Node_exporter of instance UNREACHABLE on new infra\"" }}
              description: {{ printf "\"  Instance: {{$labels.instance}} \\n    ID: {{$labels.id}} \\n    Project: {{$labels.project}} \\n    IP address: {{$labels.ip}} \\n \"" }}
          - alert: ServerlistInstanceDown
            expr: up{job="serverListServer"} == 0
            for: 5m
            labels:
              severity: CRITICAL
              frequency: 15m
            annotations:
              summary: {{ printf "\"Serverlist server Down\"" }}
              description: {{ printf "\"  Serverlist: {{ $labels.id }}/{{ $labels.instance }} is down!\\n    ID: {{ $labels.id }} \\n    Project: {{ $labels.project }}\\n    DTAP: {{ $labels.type }}\\n \"" }}
          - alert: OutOfDiskSpace
            expr: (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"} * 100) < 10
            for: 5m
            labels:
              severity: WARN
              frequency: daily
            annotations:
              summary: {{ printf "\"Out of disk space (instance {{ $labels.instance }}) \"" }}
              description: {{ printf "\"  Disk is almost full (< 10 percent left)\\n    VALUE = {{ $value }}\\n    Project: {{ $labels.id }}/{{ $labels.project }}\\n    Type: {{ $labels.type }}\\n \\n \"" }}

  recording_rules.yml: | 
    {}
  prometheus.yml: |
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
    scrape_configs:
      - job_name: 'prometheus-rancher-prod'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'node-targets'
        file_sd_configs:
          - files:
            - /etc/configProm/node-targets.yml
        honor_labels: true
      - job_name: 'blackbox-targets'
        scrape_interval: 5m
        metrics_path: /probe
        honor_labels: true
        params:
          module: [http_2xx]
        file_sd_configs:
          - files:
            - '/etc/configProm/website-targets.yml'
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: molgenis-prometheus-prometheus-blackbox-exporter:9115
      - job_name: prometheus-openstack
        honor_labels: true
        metrics_path: /federate
        params:
          'match[]':
            - '{__name__=~"job:.*"}'   # Request all job-level time series
            - '{job="prometheus"}'
            - '{job="openstack23"}'
            - '{job="haproxy"}'
            - '{job="tower"}'
        static_configs:
          - targets:
              - 195.169.22.41:9090
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: molgenis-prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop
