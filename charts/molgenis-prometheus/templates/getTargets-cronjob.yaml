apiVersion: batch/v1
kind: CronJob
metadata:
  name: molgenis-prometheus-cronjob
  labels:
    app: 'molgenis-prometheus'
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  schedule: "0 * * * *"
  startingDeadlineSeconds: 300
  jobTemplate:
    spec:
      template:
        spec:
          dnsPolicy: ClusterFirst
          dnsConfig:
            options:
              - name: ndots
                value: "2"
          containers:
          - name: get-targets
            image: python:3.8-alpine3.12
            env:
              - name: githubtoken
                valueFrom:
                  secretKeyRef:
                    name: molgenis-prometheus-cronjob-secrets
                    key: githubtoken
              - name: serverlistuser
                valueFrom: 
                  secretKeyRef:
                    name: molgenis-prometheus-cronjob-secrets
                    key: serverlistuser
              - name: serverlistpassword
                valueFrom:
                  secretKeyRef:
                    name: molgenis-prometheus-cronjob-secrets
                    key: serverlistpassword
            command: ["/bin/ash"]
            args: ["-c", "cd /tmp &&
                    apk add curl && 
                    pip3 install -U pip requests --user &&
                    curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.15.5/bin/linux/amd64/kubectl && 
                    chmod +x kubectl && 
                    mv kubectl /usr/local/bin/kubectl && 
                    token=$(cat /run/secrets/kubernetes.io/serviceaccount/token) && 
                    wget {{ .Values.secret.githubtoken }}@raw.githubusercontent.com/molgenis/molgenis-ops-helm/master/charts/molgenis-prometheus/scripts/serverlistRequester.py &&
                    python serverlistRequester.py $(echo $serverlistuser | base64 -d ) $(echo $serverlistpassword | base64 -d ) &&
                    kubectl --token=$token create configmap targets-configmap --from-file node-targets.yml --from-file website-targets.yml -o yaml --dry-run | kubectl --token=$token replace -f - &&
                    rm -rf /tmp/*"]
          serviceAccountName: update-configmap-bot
          restartPolicy: OnFailure
